from collections import deque
from typing import Deque
from pydantic import BaseModel, Field


class TaskDecompositionOutput(BaseModel):
    """..."""

    subtasks: Deque[str] = Field(
        default_factory=deque,
        description=(
            "Ordered list of sequentialsubtasks (action instructions) generated by the agent. "
            "Each subtask must:\n"
            "1. Build explicitly on the insights/results of the previous subtask.\n"
            "2. Progressively deepen understanding of the problem.\n"
            "3. Be concise, precise, and expert-focused.\n"
            "4. Leverage the full internal conversation history "
            "without redoing or replanning anything already addressed.\n"
            "5. Never include code or mention data ingestion, as data is already available.\n"
        ),
    )
